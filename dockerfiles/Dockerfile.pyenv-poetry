ARG BASE_VERSION=20.04
ARG CUDA_VERSION=12.5.0
ARG DEVICE=cpu

FROM ubuntu:${BASE_VERSION} AS base-cpu
FROM nvidia/cuda:${CUDA_VERSION}-devel-ubuntu${BASE_VERSION} AS base-gpu
FROM base-${DEVICE}

SHELL ["/bin/bash", "-c"]

ARG PYTHONVERSION=3.10.13
ENV HOME=/root
ENV PYENV_ROOT="${HOME}/.pyenv"
ENV PATH="${PYENV_ROOT}/bin:${PATH}"
ENV PATH="${PYENV_ROOT}/shims:${PATH}"
ENV PATH="${HOME}/.local/bin:${PATH}"

RUN set -eux ; \
	apt-get update; \
	DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
		ca-certificates \
		netbase \
		tzdata \
	; \
	rm -rf /var/lib/apt/lists/*

RUN set -eux ;\
    \
    apt-get update \
    && apt-get install -y --no-install-recommends --fix-missing \
	build-dep \
        build-essential \
        curl \
        git \
        libbz2-dev \
        libffi-dev \
	libhdf5-dev \
        liblzma-dev \
        libncursesw5-dev \
        libreadline-dev \
        libsqlite3-dev \
        libssl-dev \
        libxml2-dev \
        libxmlsec1-dev \
        llvm \
        make \
	pkg-config \
        tk-dev \
        wget \
        xz-utils \
        zlib1g-dev ; \
        rm -rf /var/lib/apt/lists/* ; \
        curl https://pyenv.run | bash \
        && rm -rf /tmp/* ; \
        echo 'export PYENV_ROOT="$HOME/.pyenv"' > ${HOME}/.bashrc ; \
        echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> ${HOME}/.bashrc ; \
        echo 'eval "$(pyenv init -)"' >> ${HOME}/.bashrc ; \
        echo 'eval "$(pyenv virtualenv-init -)"' >> ${HOME}/.bashrc ; \
        source ${HOME}/.bashrc ; \
        pyenv install ${PYTHONVERSION} ; \
        pyenv global ${PYTHONVERSION} ; \
        curl -sSL https://install.python-poetry.org | python3 - ;

WORKDIR ${HOME}

ENV PYTHONPATH=/

ENTRYPOINT [ "/bin/bash" ]
